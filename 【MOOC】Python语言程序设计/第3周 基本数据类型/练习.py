# 获得用户输入的一个整数N，计算N的平方值；
# 结果采用宽度20字符方式居中输出，空余字符采用减号(-)填充。
# 如果结果超过20个字符，则以结果宽度为准。
#n = eval(input()) ** 2
#print("{:-^20}".format(n))


# 同符号数学运算
# 读入一个整数N，分别计算如下内容：
# 1. N的绝对值；
# 2. N与10进行同符号加法、减法和乘法运算，
#    同符号运算指使用N的绝对值与另一个数进行运算，
#    运算结果的绝对值被赋予N相同的符号，其中，0的符号是正号。
# 将上述4项结果在一行输出，采用空格分隔，输出结果均为整数。
n = eval(input())
a = abs(n)
b = a + 10 # 这里为什么要用a，因为是同符号运算
c = a - 10
d = a * 10
if n >= 0:
    print(a, abs(b), abs(c), abs(d))
else:
    print(a, -abs(b), -abs(c), -abs(d))



# 天天向上的力量III
'''
一年365天，以第1天的能力值为基数，记为1.0。
当好好学习时，能力值相比前一天提高N‰；当没有学习时，能力值相比前一天下降N‰。
每天努力或放任，一年下来的能力值相差多少呢？
其中，N的取值范围是0到100，N可以是小数，假设输入符合要求。
获得用户输入的N，计算每天努力和每天放任365天后的能力值及能力间比值，
其中，能力值保留小数点后2位，能力间比值输出整数，输出结果间采用英文逗号分隔。
使用input()获得N。
'''
n = eval(input())  
a = pow(1 + (n / 1000), 365)  
b = pow(1 - (n / 1000), 365)  
c = a / b  
print("{0:.2f},{1:.2f},{2:.0f}".format(a, b, int(c)))



# 星号三角形I
# 读入一个整数N，N是奇数，输出由星号字符组成的等边三角形，要求：
# 第1行1个星号，第2行3个星号，第3行5个星号，依次类推，最后一行共N的星号。
n = eval(input())
if n % 2 == 0:
    print("输入错误")
else:
    for i in range(1, n+1, 2):
        a = "*" * i
        print(a.center(n))



# 恺撒密码 I
c = input()
for i in c:
    if ord(i) in range(97, 122):
        x = 97 + (ord(i) + 3 - 97) % 26
        y = chr(x)
        print(y, end="")
    else:
        print(" ",end="")
